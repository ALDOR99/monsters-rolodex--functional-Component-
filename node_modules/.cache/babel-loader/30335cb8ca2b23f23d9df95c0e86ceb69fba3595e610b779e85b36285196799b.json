{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ali_d\\\\Documents\\\\GitHub\\\\monsters-rolodex\\\\monsters-rolodex\\\\src\\\\App.js\";\nimport { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n//--------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  //------------------------------------------------------------------------------------------------------------------\n\n  constructor() {\n    //inşaatçi\n    super();\n    this.state = {\n      monsters: [\n      //Json objem\n      {\n        name: \"Linda\",\n        id: \"123e\" // Bu anahtar değer aslında React'in, sayfanızdaki bileşenleri güncellemek ve yeniden oluşturmak söz konusu olduğunda, daha optimize hale getirmek için kullanığı bir şeydir.\n      }, {\n        name: \"Frank\",\n        id: \"sadasd\"\n      }, {\n        name: \"Jacky\",\n        id: \"asdadsasd\"\n      }, {\n        name: \"alis\",\n        id: \"asdasdasd\"\n      }]\n    };\n  }\n\n  //------------------------------------------------------------------------------------------------------------------\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children:\n      //dizi yönetimi \"map\" = dizinin içinde,soldan sağa doğru her bir öğe üzerinde,\n      //yineleme yapmamızı sağlayan bir yöntemdir.Ve size yeni bir dizi ,geriye verir.\n      this.state.monsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this); //monster parametresini geriye return et, h etiketi içerisinde\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n//--------------------------------------------------------------------\nexport default App;","map":{"version":3,"names":["Component","logo","App","constructor","state","monsters","name","id","render","map","monster"],"sources":["C:/Users/ali_d/Documents/GitHub/monsters-rolodex/monsters-rolodex/src/App.js"],"sourcesContent":["import { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n//--------------------------------------------------------------------\n\nclass App extends Component {\n  //------------------------------------------------------------------------------------------------------------------\n\n  constructor() {\n    //inşaatçi\n    super();\n    this.state = {\n      monsters: [\n        //Json objem\n        {\n          name: \"Linda\",\n          id: \"123e\", // Bu anahtar değer aslında React'in, sayfanızdaki bileşenleri güncellemek ve yeniden oluşturmak söz konusu olduğunda, daha optimize hale getirmek için kullanığı bir şeydir.\n        },\n        {\n          name: \"Frank\",\n          id: \"sadasd\",\n        },\n        {\n          name: \"Jacky\",\n          id: \"asdadsasd\",\n        },\n        {\n          name: \"alis\",\n          id: \"asdasdasd\",\n        },\n      ],\n    };\n  }\n\n  //------------------------------------------------------------------------------------------------------------------\n\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          //dizi yönetimi \"map\" = dizinin içinde,soldan sağa doğru her bir öğe üzerinde,\n          //yineleme yapmamızı sağlayan bir yöntemdir.Ve size yeni bir dizi ,geriye verir.\n          this.state.monsters.map((monster) => {\n            return (\n              <div key={monster.id}>\n                <h1>{monster.name}</h1>\n              </div>\n            ); //monster parametresini geriye return et, h etiketi içerisinde\n          })\n        }\n      </div>\n    );\n  }\n}\n\n//--------------------------------------------------------------------\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;;AAElB;AAAA;AAEA,MAAMC,GAAG,SAASF,SAAS,CAAC;EAC1B;;EAEAG,WAAW,GAAG;IACZ;IACA,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE;MACR;MACA;QACEC,IAAI,EAAE,OAAO;QACbC,EAAE,EAAE,MAAM,CAAE;MACd,CAAC,EACD;QACED,IAAI,EAAE,OAAO;QACbC,EAAE,EAAE;MACN,CAAC,EACD;QACED,IAAI,EAAE,OAAO;QACbC,EAAE,EAAE;MACN,CAAC,EACD;QACED,IAAI,EAAE,MAAM;QACZC,EAAE,EAAE;MACN,CAAC;IAEL,CAAC;EACH;;EAEA;;EAEAC,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA;MAEhB;MACA;MACA,IAAI,CAACJ,KAAK,CAACC,QAAQ,CAACI,GAAG,CAAEC,OAAO,IAAK;QACnC,oBACE;UAAA,uBACE;YAAA,UAAKA,OAAO,CAACJ;UAAI;YAAA;YAAA;YAAA;UAAA;QAAM,GADfI,OAAO,CAACH,EAAE;UAAA;UAAA;UAAA;QAAA,QAEd,CACN,CAAC;MACL,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEA;EAEV;AACF;;AAEA;AACA,eAAeL,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}