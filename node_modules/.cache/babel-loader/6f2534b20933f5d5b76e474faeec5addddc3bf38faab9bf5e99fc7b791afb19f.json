{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ali_d\\\\Documents\\\\GitHub\\\\monsters-rolodex\\\\monsters-rolodex\\\\src\\\\App.js\";\nimport { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n//--------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    //inşaatçi\n    super();\n    this.state = {\n      monsters: [\n      //Json objem\n      {\n        name: \"Linda\"\n      }, {\n        name: \"Frank\"\n      }, {\n        name: \"Jacky\"\n      }]\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children:\n      //dizi yönetimi \"map\" = dizinin içinde,soldan sağa doğru her bir öğe üzerinde,\n      //yineleme yapmamızı sağlayan bir yöntemdir.Ve size yeni bir dizi geri verir.\n      this.state.monsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: monster.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n//--------------------------------------------------------------------\nexport default App;","map":{"version":3,"names":["Component","logo","App","constructor","state","monsters","name","render","map","monster"],"sources":["C:/Users/ali_d/Documents/GitHub/monsters-rolodex/monsters-rolodex/src/App.js"],"sourcesContent":["import { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n//--------------------------------------------------------------------\n\nclass App extends Component {\n  constructor() {\n    //inşaatçi\n    super();\n    this.state = {\n      monsters: [\n        //Json objem\n        {\n          name: \"Linda\",\n        },\n        {\n          name: \"Frank\",\n        },\n        {\n          name: \"Jacky\",\n        },\n      ],\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          //dizi yönetimi \"map\" = dizinin içinde,soldan sağa doğru her bir öğe üzerinde,\n          //yineleme yapmamızı sağlayan bir yöntemdir.Ve size yeni bir dizi geri verir.\n          this.state.monsters.map((monster) => {\n            return <h1>{monster.name}</h1>;\n          })\n        }\n      </div>\n    );\n  }\n}\n\n//--------------------------------------------------------------------\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;;AAElB;AAAA;AAEA,MAAMC,GAAG,SAASF,SAAS,CAAC;EAC1BG,WAAW,GAAG;IACZ;IACA,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE;MACR;MACA;QACEC,IAAI,EAAE;MACR,CAAC,EACD;QACEA,IAAI,EAAE;MACR,CAAC,EACD;QACEA,IAAI,EAAE;MACR,CAAC;IAEL,CAAC;EACH;EAEAC,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA;MAEhB;MACA;MACA,IAAI,CAACH,KAAK,CAACC,QAAQ,CAACG,GAAG,CAAEC,OAAO,IAAK;QACnC,oBAAO;UAAA,UAAKA,OAAO,CAACH;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM;MAChC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEA;EAEV;AACF;;AAEA;AACA,eAAeJ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}