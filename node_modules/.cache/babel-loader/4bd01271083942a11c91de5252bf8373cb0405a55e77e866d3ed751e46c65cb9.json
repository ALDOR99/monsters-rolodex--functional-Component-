{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ali_d\\\\Documents\\\\GitHub\\\\monsters-rolodex\\\\monsters-rolodex\\\\src\\\\App.js\";\nimport { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n//--------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  //------------------------------------------------------------------------------------------------------------------\n\n  constructor() {\n    //inşaatçi // yapıcı metod\n    super();\n    this.onSeachChange = event => {\n      const searchField = event.target.value.toLowerCase(); //toLowerCase ,tüm diziler üzerinde ,hepsini küçük harfe dönüştüren bir yöntemdir.\n\n      this.setState(() => {\n        return {\n          searchField\n        };\n      });\n    };\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    };\n    console.log(\"constructor\");\n  }\n\n  //------------------------------------------------------------------------------------------------------------------\n\n  componentDidMount() {\n    //[yaşam döngüsü yöntemi  = lifecycle method]\n    console.log(\"componentDidMount\");\n    fetch(\"https://jsonplaceholder.typicode.com/users\") //Jsonu alıyorum ,[ fetch = gidip getirmek ]\n    .then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }, () => {\n      console.log(this.state);\n    }));\n  }\n\n  //------------------------------------------------------------------------------------------------------------------\n\n  render() {\n    console.log(\"render\");\n    // Render ne gösterileceğini belirler. Kullanıcının arayüzünün ne olacağını belirler.\n\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const {\n      onSeachChange\n    } = this;\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.name.toLowerCase().includes(searchField);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: this.onSeachChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this),\n      //dizi yönetimi \"map\" = dizinin içinde,soldan sağa doğru her bir öğe üzerinde,\n      //yineleme yapmamızı sağlayan bir yöntemdir.Ve size yeni bir dizi ,geriye verir.\n      filteredMonsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this); //monster parametresini geriye return et, h etiketi içerisinde\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n//--------------------------------------------------------------------\nexport default App;","map":{"version":3,"names":["Component","logo","App","constructor","onSeachChange","event","searchField","target","value","toLowerCase","setState","state","monsters","console","log","componentDidMount","fetch","then","response","json","users","render","filteredMonsters","filter","monster","name","includes","map","id"],"sources":["C:/Users/ali_d/Documents/GitHub/monsters-rolodex/monsters-rolodex/src/App.js"],"sourcesContent":["import { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n//--------------------------------------------------------------------\n\nclass App extends Component {\n  //------------------------------------------------------------------------------------------------------------------\n\n  constructor() {\n    //inşaatçi // yapıcı metod\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n    console.log(\"constructor\");\n  }\n\n  //------------------------------------------------------------------------------------------------------------------\n\n  componentDidMount() {\n    //[yaşam döngüsü yöntemi  = lifecycle method]\n    console.log(\"componentDidMount\");\n    fetch(\"https://jsonplaceholder.typicode.com/users\") //Jsonu alıyorum ,[ fetch = gidip getirmek ]\n      .then((response) => response.json())\n      .then((users) =>\n        this.setState(\n          () => {\n            return { monsters: users };\n          },\n          () => {\n            console.log(this.state);\n          }\n        )\n      );\n  }\n\n  //------------------------------------------------------------------------------------------------------------------\n\n  onSeachChange = (event) => {\n    const searchField = event.target.value.toLowerCase(); //toLowerCase ,tüm diziler üzerinde ,hepsini küçük harfe dönüştüren bir yöntemdir.\n\n    this.setState(() => {\n      return {\n        searchField,\n      };\n    });\n  };\n\n  render() {\n    console.log(\"render\");\n    // Render ne gösterileceğini belirler. Kullanıcının arayüzünün ne olacağını belirler.\n\n    const { monsters, searchField } = this.state;\n    const { onSeachChange } = this;\n\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField);\n    });\n\n    return (\n      <div className=\"App\">\n        <input\n          className=\"search-box\"\n          type=\"search\"\n          placeholder=\"search monsters\"\n          onChange={this.onSeachChange}\n        />\n        {\n          //dizi yönetimi \"map\" = dizinin içinde,soldan sağa doğru her bir öğe üzerinde,\n          //yineleme yapmamızı sağlayan bir yöntemdir.Ve size yeni bir dizi ,geriye verir.\n          filteredMonsters.map((monster) => {\n            return (\n              <div key={monster.id}>\n                <h1>{monster.name}</h1>\n              </div>\n            ); //monster parametresini geriye return et, h etiketi içerisinde\n          })\n        }\n        <button onClick></button>\n      </div>\n    );\n  }\n}\n\n//--------------------------------------------------------------------\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;;AAElB;AAAA;AAEA,MAAMC,GAAG,SAASF,SAAS,CAAC;EAC1B;;EAEAG,WAAW,GAAG;IACZ;IACA,KAAK,EAAE;IAAC,KA6BVC,aAAa,GAAIC,KAAK,IAAK;MACzB,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,WAAW,EAAE,CAAC,CAAC;;MAEtD,IAAI,CAACC,QAAQ,CAAC,MAAM;QAClB,OAAO;UACLJ;QACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IApCC,IAAI,CAACK,KAAK,GAAG;MACXC,QAAQ,EAAE,EAAE;MACZN,WAAW,EAAE;IACf,CAAC;IACDO,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC5B;;EAEA;;EAEAC,iBAAiB,GAAG;IAClB;IACAF,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChCE,KAAK,CAAC,4CAA4C,CAAC,CAAC;IAAA,CACjDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,KAAK,IACV,IAAI,CAACV,QAAQ,CACX,MAAM;MACJ,OAAO;QAAEE,QAAQ,EAAEQ;MAAM,CAAC;IAC5B,CAAC,EACD,MAAM;MACJP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,KAAK,CAAC;IACzB,CAAC,CACF,CACF;EACL;;EAEA;;EAYAU,MAAM,GAAG;IACPR,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB;;IAEA,MAAM;MAAEF,QAAQ;MAAEN;IAAY,CAAC,GAAG,IAAI,CAACK,KAAK;IAC5C,MAAM;MAAEP;IAAc,CAAC,GAAG,IAAI;IAE9B,MAAMkB,gBAAgB,GAAGV,QAAQ,CAACW,MAAM,CAAEC,OAAO,IAAK;MACpD,OAAOA,OAAO,CAACC,IAAI,CAAChB,WAAW,EAAE,CAACiB,QAAQ,CAACpB,WAAW,CAAC;IACzD,CAAC,CAAC;IAEF,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA,wBAClB;QACE,SAAS,EAAC,YAAY;QACtB,IAAI,EAAC,QAAQ;QACb,WAAW,EAAC,iBAAiB;QAC7B,QAAQ,EAAE,IAAI,CAACF;MAAc;QAAA;QAAA;QAAA;MAAA,QAC7B;MAEA;MACA;MACAkB,gBAAgB,CAACK,GAAG,CAAEH,OAAO,IAAK;QAChC,oBACE;UAAA,uBACE;YAAA,UAAKA,OAAO,CAACC;UAAI;YAAA;YAAA;YAAA;UAAA;QAAM,GADfD,OAAO,CAACI,EAAE;UAAA;UAAA;UAAA;QAAA,QAEd,CACN,CAAC;MACL,CAAC,CAAC,eAEJ;QAAQ,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QACrB;EAEV;AACF;;AAEA;AACA,eAAe1B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}